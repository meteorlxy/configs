import type { FlatConfig } from '@typescript-eslint/utils/ts-eslint';

export const jsoncRules = {
  'jsonc/no-bigint-literals': 'error',
  'jsonc/no-binary-expression': 'error',
  'jsonc/no-binary-numeric-literals': 'error',
  'jsonc/no-dupe-keys': 'error',
  'jsonc/no-escape-sequence-in-identifier': 'error',
  'jsonc/no-floating-decimal': 'error',
  'jsonc/no-hexadecimal-numeric-literals': 'error',
  'jsonc/no-infinity': 'error',
  'jsonc/no-multi-str': 'error',
  'jsonc/no-nan': 'error',
  'jsonc/no-number-props': 'error',
  'jsonc/no-numeric-separators': 'error',
  'jsonc/no-octal': 'error',
  'jsonc/no-octal-escape': 'error',
  'jsonc/no-octal-numeric-literals': 'error',
  'jsonc/no-parenthesized': 'error',
  'jsonc/no-plus-sign': 'error',
  'jsonc/no-regexp-literals': 'error',
  'jsonc/no-sparse-arrays': 'error',
  'jsonc/no-template-literals': 'error',
  'jsonc/no-undefined-value': 'error',
  'jsonc/no-unicode-codepoint-escapes': 'error',
  'jsonc/no-useless-escape': 'error',
  'jsonc/space-unary-ops': 'error',
  'jsonc/valid-json-number': 'error',
  'jsonc/vue-custom-block/no-parsing-error': 'error',

  // stylistic rules
  'jsonc/array-bracket-newline': 'off',
  'jsonc/array-bracket-spacing': 'off',
  'jsonc/array-element-newline': 'off',
  'jsonc/comma-dangle': 'off',
  'jsonc/comma-style': 'off',
  'jsonc/indent': 'off',
  'jsonc/key-name-casing': 'off',
  'jsonc/key-spacing': 'off',
  'jsonc/no-comments': 'off',
  'jsonc/no-irregular-whitespace': 'off',
  'jsonc/object-curly-newline': 'off',
  'jsonc/object-curly-spacing': 'off',
  'jsonc/object-property-newline': 'off',
  'jsonc/sort-array-values': 'off',
  'jsonc/sort-keys': 'off',
  'jsonc/quote-props': 'off',
  'jsonc/quotes': 'off',

  // other rules
  'jsonc/auto': 'off',
} satisfies FlatConfig.Rules;
